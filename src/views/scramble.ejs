<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scramble Alert</title>
    <link rel="stylesheet" href="/CSS/styles.css">
</head>
<body>

<div class="container">
    <img src="/images/logo.png" alt="Logo">
    <h1>Scramble Alert</h1>
    <form action="/scramble/submit" method="POST" onsubmit="adjustTimeForZulu()">
        <label for="system">Star System:</label>
        <select id="system" name="system" onchange="populatePlanets()" required>
            <option value="">Select a system</option>
            <% starSystems.forEach(system => { %>
                <option value="<%= system._id %>" data-planets='<%= JSON.stringify(system.planets) %>'>
                    <%= system.name %>
                </option>
            <% }); %>
        </select>

        <label for="planet">Planet:</label>
        <select id="planet" name="planet" onchange="populateMoons()" disabled required>
            <option value="">Select a planet</option>
        </select>

        <label for="moon">Body:</label>
        <select id="moon" name="moon" disabled required>
            <option value="">Select a moon</option>
        </select>

        <label for="timeOption">Select Time:</label>
        <select id="timeOption" name="timeOption" required onchange="toggleTimePicker()">
            <option value="ASAP">ASAP</option>
            <option value="custom">Custom</option>
        </select>
        
        <div id="customTimeContainer" style="display: none;">
            <label for="customTime">Enter Time:</label>
            <input type="time" id="customTime" name="customTime" step="900">
            
            <label for="timezone">Select Timezone:</label>
            <select id="timezone" name="timezone" required>
                <option value="AEST" selected>Australian Eastern Standard Time (AEST)</option>
                <option value="AWST">Australian Western Standard Time (AWST)</option>
                <option value="ACST">Australian Central Standard Time (ACST)</option>
                <option value="AEDT">Australian Eastern Daylight Time (AEDT)</option>
                <option value="ACDT">Australian Central Daylight Time (ACDT)</option>
                <option value="NZDT">New Zealand Daylight Time (NZDT)</option>
                <option value="NZST">New Zealand Standard Time (NZST)</option>
                <option value="PST">Pacific Standard Time (PST)</option>
                <option value="EST">Eastern Standard Time (EST)</option>
                <option value="CST">Central Standard Time (CST)</option>
                <option value="UTC">UTC (Zulu Time)</option>
            </select>
        </div>

        <div class="notes">
            <h3>Notes:</h3>
            <textarea rows="4" name="notes" placeholder="Add any notes here..."></textarea>
        </div>
        <div style="display: flex; justify-content: space-between; margin-top: 20px;">
            <button type="submit" style="margin-right: 10px; padding: 10px; background-color: #4A5D23; color: white; border: none; border-radius: 4px; cursor: pointer; width: 65%; text-align: center;">Submit</button>
            <a href="/" class="back-button" style="text-decoration: none; display: inline-block; width: 30%; text-align: center; padding: 10px; background-color: #C7C9C7; color: #4A5D23; border-radius: 4px; cursor: pointer;">Back</a>
        </div>                
    </form>
</div>

<script>
    function toggleTimePicker() {
        const timeOption = document.getElementById('timeOption').value;
        const customTimeContainer = document.getElementById('customTimeContainer');
        
        if (timeOption === 'custom') {
            customTimeContainer.style.display = 'block';
        } else {
            customTimeContainer.style.display = 'none';
        }
    }

    function adjustTimeForZulu() {
        const timeOption = document.getElementById('timeOption').value;
        if (timeOption !== 'custom') return; // Only adjust time if 'custom' is selected

        const customTimeInput = document.getElementById('customTime');
        const timezoneSelect = document.getElementById('timezone');
        const customTime = customTimeInput.value;
        const timezone = timezoneSelect.value;

        // Convert the selected time and timezone to UTC (Zulu time)
        if (customTime) {
            const [hours, minutes] = customTime.split(':').map(num => parseInt(num, 10));

            const date = new Date();
            date.setHours(hours, minutes, 0, 0);

            let offsetMinutes = 0;

            // Define time zone offsets in minutes
            const timezoneOffsets = {
                'AEST': 600,  // +10:00
                'AWST': 480,  // +08:00
                'ACST': 570,  // +09:30
                'AEDT': 660,  // +11:00
                'ACDT': 630,  // +10:30
                'NZDT': 780,  // +13:00
                'NZST': 720,  // +12:00
                'PST': -480,  // -08:00
                'EST': -300,  // -05:00
                'CST': -360,  // -06:00
                'UTC': 0
            };

            offsetMinutes = timezoneOffsets[timezone] || 0; // Default to 0 if not found (UTC)

            // Adjust date by the timezone offset
            date.setMinutes(date.getMinutes() - offsetMinutes);

            // Format to UTC (Zulu Time)
            const utcDateString = date.toISOString(); // This automatically converts to UTC

            // Set the Zulu time in the form before submitting
            document.getElementById('customTime').value = utcDateString; // Ensure correct format in form
        }
    }

    // Function to populate planets based on the selected star system
    function populatePlanets() {
        const systemSelect = document.getElementById('system');
        const planetSelect = document.getElementById('planet');
        const moonSelect = document.getElementById('moon');
        
        // Clear previous options
        planetSelect.innerHTML = '<option value="">Select a planet</option>';
        moonSelect.innerHTML = '<option value="">Select a moon</option>';
        moonSelect.disabled = true;

        const selectedSystem = systemSelect.value;
        const planets = JSON.parse(systemSelect.options[systemSelect.selectedIndex].getAttribute('data-planets'));

        planets.forEach(planet => {
            const option = document.createElement('option');
            option.value = planet._id;
            option.textContent = planet.name;
            // Store moons in a data attribute for later use
            option.setAttribute('data-moons', JSON.stringify(planet.moons));
            planetSelect.appendChild(option);
        });

        planetSelect.disabled = planets.length === 0; // Disable if no planets
    }

    // Function to populate moons based on the selected planet
    function populateMoons() {
    const planetSelect = document.getElementById('planet');
    const moonSelect = document.getElementById('moon');

    // Clear previous options
    moonSelect.innerHTML = '<option value="">Select an option</option>';
    moonSelect.disabled = true;

    const selectedPlanetId = planetSelect.value;
    const selectedPlanetName = planetSelect.options[planetSelect.selectedIndex].textContent;
    const moons = JSON.parse(planetSelect.options[planetSelect.selectedIndex].getAttribute('data-moons'));

    // Populate moons as additional options
    moons.forEach(moon => {
        const option = document.createElement('option');
        option.value = moon._id;
        option.textContent = moon.name;
        moonSelect.appendChild(option);
    });

    moonSelect.disabled = moons.length === 0 && !orbitOption; // Disable if no moons or orbit
}

</script>

</body>
</html>
